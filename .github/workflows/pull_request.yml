name: Pull Requests

on:
  pull_request:
    branches:
    - main
    types:
    - opened
    - synchronize
    - reopened
    - edited
  pull_request_review:
    branches:
    - main
    
env:
  CONTINUE_ON_ERROR: false

jobs:
  make-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Lint
        run: echo "make lint"
  add-reviewers:
    runs-on: ubuntu-latest
    needs: make-lint
    steps:
      - name: Add Reviewers
        run: echo "Adding team as reviewers"
  add-required-reviewer:
    if: ${{ github.event.review.state == 'approved' && github.actor != 'changtyler' && github.event.pull_request.head.repo.owner.login != 'changtyler' }}
    runs-on: ubuntu-latest
    needs: add-reviewers
    steps:
      - name: Add Required Reviewer
        run: echo "Adding a required reviewer - "; echo "changtyler"
  check-required-approval:
    if: github.event_name == 'pull_request_review'
    runs-on: ubuntu-latest
    needs: add-reviewers
    steps:
      - name: Check Required Approval
        if: ${{ github.event.review.state == 'approved' && github.actor == 'changtyler' && github.event.pull_request.head.repo.owner.login != 'changtyler' }}
        id: approval
        run: echo "Approved - you may now merge your Pull Request."
        
      - name: Skipped
        if: steps.approval.outcome == 'skipped' && ${{ env.CONTINUE_ON_ERROR == false }}
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: echo "Skipped because PR requires approvals."; echo ${{ env.GITHUB_RUN_ID }}; echo ${{ github.job }}; #exit 1
        
#       - id: timestamp
#         run: echo "::set-output name=timestamp::$(timestamp +%s)"
        
      - name: Pass
#         if: steps.approval.outcome == 'failed' && ${{ env.GITHUB_FAILED_JOB_ID != none }}
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository_owner }}/${{ github.repository }}/actions/jobs/5337389092/rerun
#       - name: Restore the previous run result
#         uses: actions/cache@v2 
#         with:
#           path: |
#             run_result
#           key: ${{ github.run_id }}-${{ github.job }}-${{ steps.timestamp.outputs.timestamp }}
#           restore-keys: |
#             ${{ github.run_id }}-${{ github.job }}-
      
#       - name: Get the previous run result
#         id: run_result
#         run: cat run_result 2>/dev/null || echo 'default'

#       - uses: actions/checkout@v2
#         if: steps.run_result.outputs.run_result != 'success'

#       - if: steps.run_result.outputs.run_result != 'success'
#         run: echo "I'm alive!" && exit 0

#       - run: echo "::set-output name=run_result::success" > run_result
